Device: Huawei Y330-U01

Android Version: Jellybean 4.2.2

Bug: LPE to root

Description:
On holiday I was looking at DEFCON23 material and spotted "O&D Android Reverse Engineering" and thought that was more than a year I wasn't doing something about Android RE (last time I probably cracked DexGuard or a similar protection). Authors: Caleb-diff-jcase, nice! Read the PDF and decided to look at the Huawei I had at home, low profile phone, easy target maybe. I started dumping the system folder (adb pull /system) to look at system APKs and binaries. I wrote simple scripts to decompile/deodex all the apps (converting them to jar to have an easy way to look at Java code). Plus I massively used "grep/strings/find" to find sensitive functions or vulnerable entry points. On the device I looked for setuid/setgid or weak permissions. No vulnerable sockets or config files this time. I started looking at APKs with android:sharedUserId="android.uid.system" and found out that com.mediatek.connectivity had a built-in shell function. Pretty easy, write the command on the EditText and press "Execute". Then I installed Busybox (no root) to have netcat or telnetd, then connected with a PC (it's good to have an hardware keyboard to work). At that point the "only" thing missing was a weak permission to gain root; jcase said "with system permission it's done and you have an huge attack surface". That's true, but I was (and am) so noob about Linux environment and took some hours to look at folders/files used in Android. While looking at files/permissions I noticed "brw-rw---- root system /dev/block/mmcblk0", complete access to the whole Android partition, but didn't know how to continue. Asked jcase -> answer: "game over...for the phone is game over", wow :D! He told me how to use "dd" to dump mmcblk0 (extracted start & size from /sys/block/mmcblk0/mmcblk0p5). Dumped it as system.img, mounted on PC, copied/set permissions to root files (all glory to Chainfire) and then "dd" again to copy the rooted image. Rebooted the phone -> r00t. I wrote an "exploit", a bit unreliable because I used "adb shell tap x y" but as a PoC it is good enough I think (also I'm not good at bash scripting, so maybe it is a little strange/could be done better).